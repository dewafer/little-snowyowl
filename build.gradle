buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

group = 'com.newnil.snowyowl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

npmInstall.workingDir = file('src/main/frontend')

task bundleFrontend(type: NpmTask) {
	inputs.files(fileTree('src/main/frontend'))
	outputs.dir('src/main/resources/frontend')

	dependsOn npmInstall

	args = ['run-script', 'build']
	workingDir = file('src/main/frontend/')
}

clean << {
	file('src/main/frontend/node_modules').deleteDir()
	file('src/main/resources/frontend').deleteDir()
}

processResources.dependsOn(bundleFrontend)
